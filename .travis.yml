language: csharp
solution: PrestaSharp.sln

mono: none
dotnet: 2.1.502

before_cache:
  # Save tagged docker images
  - >
    mkdir -p $HOME/docker && docker images -a --filter='dangling=false' --format '{{.Repository}}:{{.Tag}} {{.ID}}'
    | xargs -n 2 -t sh -c 'test -e $HOME/docker/$1.tar.gz || docker save $0 | gzip -2 > $HOME/docker/$1.tar.gz'

cache:
  bundler: true
  directories:
    - $HOME/docker

services:
  - docker

before_install:
  # Load cached docker images
  - if [[ -d $HOME/docker ]]; then ls $HOME/docker/*.tar.gz | xargs -I {file} sh -c "zcat {file} | docker load"; fi
  - sudo /etc/init.d/mysql stop
  - docker network create bukimedia-net
  - docker run -ti --name bukimedia-mysql --network bukimedia-net --env-file .docker/mysql.env -p 3306:3306 -d mysql:5.5
  - docker run -ti --name bukimedia-prestashop --network bukimedia-net --env-file .docker/prestashop.env -p 8080:80 -d prestashop/prestashop:1.7 /bin/bash

install:
  - docker cp .docker/shell-scripts/ bukimedia-mysql:/shell-scripts
  - docker cp .docker/shell-scripts/ bukimedia-prestashop:/shell-scripts
  - docker exec -ti bukimedia-mysql bash -c "chmod +x /shell-scripts/mysql-setup.sh"
  - docker exec -ti bukimedia-prestashop bash -c "chmod +x /shell-scripts/prestashop-setup.sh"

before_script:
  - docker exec -ti bukimedia-prestashop bash -c "sh /shell-scripts/prestashop-setup.sh"
  - docker exec -ti bukimedia-mysql bash -c "sh /shell-scripts/mysql-setup.sh"

script:
  - dotnet build -c Debug PrestaSharp.sln

after_script:
  - sed -i -e 's/<TargetFrameworks>netstandard2.0;net452<\/TargetFrameworks>/<TargetFramework>netstandard2.0<\/TargetFramework>/g' "PrestaSharp/PrestaSharp.csproj"
  - sed -i -e 's/<TargetFrameworks>netcoreapp2.1;net452<\/TargetFrameworks>/<TargetFramework>netcoreapp2.1<\/TargetFramework>/g' "PrestaSharp.IntegrationTests/PrestaSharp.IntegrationTests.csproj"
  - dotnet restore PrestaSharp.sln
  - dotnet test -v=d